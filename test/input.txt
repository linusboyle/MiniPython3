100
b=10
c='12345'
d=0.0123023
a = b + c
b<=a
a+=2
a >> 2
b << 3
x+yy

d=a&b
a%dsa
def func()
	print(a,b,c)
ashSS="\\\\\\"+'\'\''

# -*- coding: UTF-8 -*-
a = 2018
b = 1951
c = 21
d = 60
e = True
f = False
g = "Tsinghua"
h = "???"
print a / c - (b / d * c + 5 * d) * (90 - d) # 四则运算1
print -5 + 7 * 90 / 6 / 5 * 3 + 100 * (-5) # 四则运算2
print (c >= d) and (a > b) or (a >= 7) and (b < 9) # 比较运算、布尔运算
print e and f or (a < b) # 比较运算、布尔运算
print 1 << 2 + c >> 1 * 2 - 6 / (-3) # 移位运算
print 9 & 8 - 6 | 7 * 2 + 9 # 位运算
print g + h + g[2: 6: 2] # 字符串操作:只涉及连接、切片，不涉及字符串函数


# -*- coding: UTF-8 -*-
PI = 3

def calculate_circle(r): # 简单的函数调用
	result = PI
	for i in range(2): # for循环
		result = result * r
	return result

def main():
	print("Calculate the area of shape:")
	
	# Step 1: Circle
	print("Circle")
	for i in range(3, 8): # for循环
		print("Radius: %d, area: %d" % (i, calculate_circle(i))) # 控制格式的输出

	# Step 2: Rectangle
	print("Rectangle")
	len_st, len_en = 2, 4 # 逗号
	wid_st, wid_en = 1, 2
	ptr_len, ptr_wid = len_st, wid_st
	step = 1
	while (ptr_len <= len_en) and (ptr_wid <= wid_en): # while循环
		print("Length: %d, width: %d, area: %d" % (ptr_len, ptr_wid, ptr_len * ptr_wid)) # 控制格式的输出
		ptr_wid += step # +=、-=、*=、/=运算符
		if (ptr_wid > wid_en): # if分支语句
			ptr_len, ptr_wid = ptr_len + step, wid_st

if __name__ == "__main__":
	main()







def deepdiv(i, j):
	while (i % j == 0):
		i /= j
		print '%d*' % j,
		if (i / j == 1):
			break
	if i % j == 0:
		print '%d' % j
		i /= j
	return i


def is_prime(num):
	j = 2
	flag = True
	while (j * j <= num):
		if num % j == 0:
			flag = False
			break
		j += 1
	if flag:
		print "%d is a prime." % num
		return True
	else:
		print "%d is not a prime." % num
		return False


def main():
	for i in range(100, 150):
		if is_prime(i):
			continue
		j = 2
		temp = i
		print '%d = ' % temp ,
		while (temp != 1):
			if (temp == j):
				print j
				break
			temp = deepdiv(temp, j)
			if temp == 1:
				break
			j += 1

if __name__ == "__main__":
	main()
